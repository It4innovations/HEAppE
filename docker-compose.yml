services:
  sshagent:
    image: ${DOCKER_REGISTRY-}sshagent
    container_name: "${INSTANCE_NAME}_sshagent"
    build:
      context: .
      dockerfile: SshAgent/Dockerfile
    restart: unless-stopped
    volumes:
      - app_volume:/app/shared
    environment:
      TZ: "Europe/Prague"
      SSH_AUTH_SOCK: "/app/shared/agentsocket"
    networks:
      - sshagent_internal_network
    profiles:
      - sshagent

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: "${INSTANCE_NAME}_mssql"
    restart: unless-stopped
    user: root
    volumes:
      - sql_volume:/var/opt/mssql
    ports:
      - "${HOST_MSSQL_PORT}:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
      TZ: "Europe/Prague"
      SA_PASSWORD: "${HOST_MSSQL_PASSWORD}"
    networks:
      - db_internal_network
      - external_network
    profiles:
      - db

  datastagingapi:
    image: ${DOCKER_REGISTRY-}datastagingapi
    container_name: "${INSTANCE_NAME}_datastagingapi"
    build:
      context: .
      dockerfile: DataStagingAPI/Dockerfile
    restart: unless-stopped
    volumes:
      - app_sftp_temp_volume:/sftp
      - app_volume:/app/shared
      - "${HOST_DATA_STAGING_HOST_MAP_FOLD_NAME}:${HOST_DATA_STAGING_CONTAINER_MAP_FOLD_PATH}"
    ports:
      - "${HOST_DATA_STAGING_PORT}:8080"
    environment:
      ASPNETCORE_RUNTYPE_ENVIRONMENT: "Docker"
      TZ: "Europe/Prague"
    networks:
      - db_internal_network
      - external_network
    profiles:
      - staging

  heappe:
    image: ${DOCKER_REGISTRY-}heappe
    container_name: "${INSTANCE_NAME}_heappe"
    build:
      context: .
      dockerfile: RestApi/Dockerfile
    restart: unless-stopped
    volumes:
      - app_sftp_temp_volume:/sftp
      - app_volume:/app/shared
      - "${HOST_APP_HOST_MAP_FOLD_NAME}:${HOST_APP_CONTAINER_MAP_FOLD_PATH}"
    ports:
      - "${HOST_APP_PORT}:80"
    environment:
      ASPNETCORE_RUNTYPE_ENVIRONMENT: "Docker"
      SSH_AUTH_SOCK: "/app/shared/agentsocket"
      TZ: "Europe/Prague"
    networks:
      - sshagent_internal_network
      - db_internal_network
      - external_network
      - vaultNet
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - vault_unseal

  vault:
    image: hashicorp/vault:1.17.3
    container_name: "${INSTANCE_NAME}_vault"
    expose:
      - 8200:8200
    environment:
      - VAULT_ADDR=http://localhost:8200
    volumes:
      - vault-volume:/vault
      - "${BASE_PATH}/vault/vault:/vault/config"
    healthcheck:
      retries: 5
    command: server
    cap_add:
      - IPC_LOCK
    networks:
      - vaultNet

  vaultagent:
    image: hashicorp/vault:1.17.3
    container_name: "${INSTANCE_NAME}_vaultagent"
    expose:
      - 8100:8100
    volumes:
      - vault-agent-volume:/vault/agent
      - "${BASE_PATH}/vault/agent:/vault/config"
      - ../app/logs/Vault/:/vault/logs
    command: proxy -config=/vault/config/vault-agent.hcl -log-level debug -log-file=/vault/logs/vault-agent.log
    cap_add:
      - IPC_LOCK
    networks:
      - vaultNet
    depends_on:
      - vault

  vault_init:
    build:
      context: .
      dockerfile: ./HashiCorpVaultScripts/DockerVersion/Dockerfile
    environment:
      INSTANCE_NAME: ${INSTANCE_NAME}
      VAULT_PASSWORD: ${VAULT_PASSWORD}
      SHARED_VAULT_FILE: ${SHARED_VAULT_FILE}
      SHARED_VAULT_FILE_NAME: ${SHARED_VAULT_FILE_NAME}
      BASE_PATH: ${BASE_PATH}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${VAULT_FILE_DIR_PATH}:/opt/ansibleVault/"
      - "${BASE_PATH}:/opt/confs/"
      # Namapování aktuální cesty na /app uvnitř kontejneru
      - ${PWD}:/app
    networks:
      - vaultNet
    profiles:
      - initVault
    depends_on:
      - vault
  
  vault_unseal:
    build:
      context: .
      dockerfile: ./HashiCorpVaultScripts/DockerVersion/Dockerfile
    environment:
      INSTANCE_NAME: ${INSTANCE_NAME}
      VAULT_PASSWORD: ${VAULT_PASSWORD}
      SHARED_VAULT_FILE: ${SHARED_VAULT_FILE}
      SHARED_VAULT_FILE_NAME: ${SHARED_VAULT_FILE_NAME}
      BASE_PATH: ${BASE_PATH}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${BASE_PATH}:/opt/confs/"
      - "${VAULT_FILE_DIR_PATH}:/opt/ansibleVault/"
      # Namapování aktuální cesty na /app uvnitř kontejneru
      - ${PWD}:/app
    networks:
      - vaultNet
    depends_on:
      - vault
    command: /opt/unsealOrInitHVault.sh


volumes:
  # Shared volumes
  app_volume:
  app_sftp_temp_volume:
  # Invidual volumes
  sql_volume:
  vault-volume:
  vault-agent-volume:

networks:
  external_network:
  sshagent_internal_network:
    internal: true
  db_internal_network:
    internal: true
  vaultNet:
    internal: true
